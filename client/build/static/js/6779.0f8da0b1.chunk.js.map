{"version":3,"file":"static/js/6779.0f8da0b1.chunk.js","mappings":"0PAOe,SAASA,IACtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,MAELC,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,GAChCK,GAAWC,EAAAA,EAAAA,MAiCXC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BZ,GAAWa,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRd,GAAQ,IACX,CAACW,GAAOC,IACR,EAsCJ,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yEAAwEC,SAAA,EACrFF,EAAAA,EAAAA,KAAA,OACEI,IAAKC,EACLJ,UAAU,2DACVK,IAAI,WAENH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gCAA+BC,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,GAAEC,SAAC,qBACjBC,EAAAA,EAAAA,MAAA,QAAMI,SA7COC,UACnBb,EAAEc,iBAEF,MAAMC,EAtBgBC,KACtB,MAAMrB,EAAS,CAAC,EAOhB,OANKqB,EAAOvB,OAAU,eAAewB,KAAKD,EAAOvB,SAC/CE,EAAOF,MAAQ,kCAEZuB,EAAOtB,UAAYsB,EAAOtB,SAASwB,OAAS,KAC/CvB,EAAOD,SAAW,2CAEbC,CAAM,EAcYwB,CAAe7B,GAGxC,GAFAM,EAAUmB,KAENK,OAAOC,KAAKN,GAAkBG,OAAS,GAI3C,IACE,MAAMI,QAAiBC,EAAAA,EAAMC,KAAK,GAADC,OAC5BC,wBAA6B,oBAChCpC,GAGF,GAAwB,MAApBgC,EAASK,OAAgB,CAC3B,MAAM,MAAEC,EAAK,KAAEC,GAASP,EAASQ,KACjCC,aAAaC,QAAQ,QAASJ,GAC9BG,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,IAG5CM,EAAAA,GAAMC,QAAQ,qBAEdvC,EAAS,aACX,MACEsC,EAAAA,GAAME,MAAM,gBAADZ,OAAiBH,EAASQ,KAAKQ,SAE9C,CAAE,MAAOD,GAAQ,IAADE,EAAAC,EACd,MAAMC,GACU,QAAdF,EAAAF,EAAMf,gBAAQ,IAAAiB,GAAM,QAANC,EAAdD,EAAgBT,YAAI,IAAAU,OAAN,EAAdA,EAAsBF,UAAWD,EAAMC,SAAW,wBACpDH,EAAAA,GAAME,MAAM,gBAADZ,OAAiBgB,GAC9B,GAamClC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SApFrB,CAChB,CACEmC,GAAI,EACJzC,KAAM,QACN0C,KAAM,QACNC,YAAa,QACbC,MAAO,QACPC,UAAU,GAEZ,CACEJ,GAAI,EACJzC,KAAM,WACN0C,KAAM,WACNC,YAAa,WACbC,MAAO,WACPC,UAAU,IAsESC,KAAKC,IACdxC,EAAAA,EAAAA,MAAA,OAAoBF,UAAU,OAAMC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAO4C,QAASD,EAAM/C,KAAMK,UAAU,QAAOC,UAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAEyC,EAAMH,WAEtCxC,EAAAA,EAAAA,KAAA,SACEqC,GAAIM,EAAM/C,KACVA,KAAM+C,EAAM/C,KACZ0C,KAAMK,EAAML,KACZC,YAAaI,EAAMJ,YACnB1C,MAAOZ,EAAS0D,EAAM/C,MACtBiD,SAAUnD,EACVO,UAAU,gCAEXX,EAAOqD,EAAM/C,QACZI,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SAAEZ,EAAOqD,EAAM/C,UAd/C+C,EAAMN,SAmBpBrC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAC9CF,EAAAA,EAAAA,KAAA,UACEsC,KAAK,SACLrC,UAAU,8BAA6BC,SACxC,sBAOOF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,UAASC,SAAA,CAAC,yBACD,KACvBF,EAAAA,EAAAA,KAAA,KACE8C,KAAK,UACL7C,UAAU,gCAA+BC,SAC1C,mDASf,C","sources":["components/adminlogin/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Login from \"../../assets/login.jpg\";\r\n// import { useAuth } from \"../../components/layout/authcontext.js\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport default function AdminLogin() {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n  // const { login } = useAuth(); \r\n\r\n  const Inputform = [\r\n    {\r\n      id: 1,\r\n      name: \"email\",\r\n      type: \"email\",\r\n      placeholder: \"Email\",\r\n      label: \"Email\",\r\n      required: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"password\",\r\n      type: \"password\",\r\n      placeholder: \"Password\",\r\n      label: \"Password\",\r\n      required: true,\r\n    },\r\n  ];\r\n\r\n  const formValidation = (values) => {\r\n    const errors = {};\r\n    if (!values.email || !/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = \"Enter a valid email address.\";\r\n    }\r\n    if (!values.password || values.password.length < 6) {\r\n      errors.password = \"Password must be at least 6 characters.\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const validationErrors = formValidation(formData);\r\n    setErrors(validationErrors);\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/api/admin/login`,\r\n        formData\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const { token, user } = response.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n        // login(token); \r\n        toast.success(\"Login successful!\");\r\n\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        toast.error(`Login Error: ${response.data.message}`);\r\n      }\r\n    } catch (error) {\r\n      const errorMessage =\r\n        error.response?.data?.message || error.message || \"Something went wrong!\";\r\n      toast.error(`Login Error: ${errorMessage}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"hero min-h-screen\">\r\n      <div className=\"hero-content flex-col lg:flex-row md:flex-row sm:flex-col items-center\">\r\n        <img\r\n          src={Login}\r\n          className=\"max-w-xs sm:max-w-sm md:max-w-md lg:max-w-lg rounded-lg \"\r\n          alt=\"Login\"\r\n        />\r\n        <div className=\"w-full md:w-1/2 sm:w-full p-4\">\r\n          <h1 className=\"\">Admin Login...!</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-control\">\r\n              {Inputform.map((input) => (\r\n                <div key={input.id} className=\"mb-4\">\r\n                  <label htmlFor={input.name} className=\"label\">\r\n                    <span className=\"label-text\">{input.label}</span>\r\n                  </label>\r\n                  <input\r\n                    id={input.name}\r\n                    name={input.name}\r\n                    type={input.type}\r\n                    placeholder={input.placeholder}\r\n                    value={formData[input.name]}\r\n                    onChange={handleChange}\r\n                    className=\"input input-bordered w-full\"\r\n                  />\r\n                  {errors[input.name] && (\r\n                    <span className=\"text-red-500 text-sm\">{errors[input.name]}</span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex justify-center\">\r\n  <button\r\n    type=\"submit\"\r\n    className=\"custom-btn w-full sm:w-auto\"\r\n  >\r\n    Get Started\r\n  </button>\r\n</div>\r\n          </form>\r\n\r\n          {/* Signup Link */}\r\n          <div className=\"mt-4\">\r\n            <span className=\"text-sm\">\r\n              Don't have an account?{\" \"}\r\n              <a\r\n                href=\"/signup\"\r\n                className=\"text-blue-500 hover:underline\"\r\n              >\r\n                Signup here to get kicked started!\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["AdminLogin","formData","setFormData","useState","email","password","errors","setErrors","navigate","useNavigate","handleChange","e","name","value","target","_objectSpread","_jsx","className","children","_jsxs","src","Login","alt","onSubmit","async","preventDefault","validationErrors","values","test","length","formValidation","Object","keys","response","axios","post","concat","process","status","token","user","data","localStorage","setItem","JSON","stringify","toast","success","error","message","_error$response","_error$response$data","errorMessage","id","type","placeholder","label","required","map","input","htmlFor","onChange","href"],"sourceRoot":""}